/*VASP Data Viewer - Views 3d data sets of molecular charge distribution
  Copyright (C) 1999-2001 Timothy B. Terriberry
  (mailto:tterribe@users.sourceforge.net)
  2011 Janne Blomqvist

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA*/

#if !defined(_ds3vasp_H)
# define _ds3vasp_H (1)

#include "ds3.hh"
#include "file.hh"

# define DS3_VASP_BLOCK_SIZE (8192)

/*Reads data files generated by the Vienna Ab-initio Simulation Package*/
class DS3VaspReader
{
public:
	DS3VaspReader(const char* file_name, const char* mode);

	// Reads a block of data from the VASP file
	int read();
	// Cancels a read in progress
	int cancel();
	// Transfer ownership of the dataset to the caller. It would
	// be better to return a unique_ptr with std::move, but caller
	// code passes this ptr left and right, so this is easier. At
	// least in the short term..
	DataSet3D* release_ds3();

    File       file;

private:
    // Forbid copying
    DS3VaspReader& operator=(const DS3VaspReader&);
    DS3VaspReader(const DS3VaspReader&);

    DataSet3D* ds3;
    size_t     npoints;
    size_t     k;
};

#endif
